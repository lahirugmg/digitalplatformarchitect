{
  "nodes": [
    { "id": "roles-consumer", "title": "API Consumer", "plane": "support", "group": "personas", "personas": ["api-consumer"], "icon": "User" },
    { "id": "roles-product", "title": "API Product Manager", "plane": "support", "group": "personas", "personas": ["api-product-manager"], "icon": "UserCog" },
    { "id": "roles-developer", "title": "API Developer", "plane": "support", "group": "personas", "personas": ["api-developer"], "icon": "Code" },

    { "id": "key-mgmt", "title": "Key Management", "plane": "control", "group": "control-plane",
      "features": [
        { "id": "km-issuance", "title": "Token Issuance (OAuth/OIDC)", "description": "Issue, introspect, revoke tokens", "personas": ["api-consumer","api-developer","api-product-manager"] },
        { "id": "km-policies", "title": "Key Manager Control", "description": "Map gateways ↔ key managers; rotate keys", "personas": ["api-product-manager"] }
      ]
    },

    { "id": "dev-portal", "title": "Developer Portal", "plane": "control", "group": "control-plane",
      "personas": ["api-consumer"],
      "features": [
        { "id": "dp-discover", "title": "Discover & Consume APIs", "description": "Catalog, tags, search, try-it" },
        { "id": "dp-subscriptions", "title": "Subscriptions/Apps", "description": "App keys, throttling tiers, sandbox/prod" }
      ]
    },

    { "id": "admin-portal", "title": "Admin Portal", "plane": "control", "group": "control-plane",
      "personas": ["api-product-manager"],
      "features": [
        { "id": "ap-rl", "title": "Rate Limit Policy Management", "description": "Define tiers, spike arrest, quotas" },
        { "id": "ap-theme", "title": "Theme Management", "description": "Dev portal look & feel" },
        { "id": "ap-workflows", "title": "Workflow Approval", "description": "Subscriptions, publish requests" }
      ]
    },

    { "id": "publisher-portal", "title": "Publisher Portal", "plane": "control", "group": "control-plane",
      "personas": ["api-developer","api-product-manager"],
      "features": [
        { "id": "pp-create", "title": "API / API Product Create & Manage", "description": "Spec import, resources, policies" },
        { "id": "pp-versioning", "title": "Revision & Version Management", "description": "Revisions, promote across envs" },
        { "id": "pp-lifecycle", "title": "Lifecycle Management", "description": "Design → Deploy → Retire" },
        { "id": "pp-testing", "title": "API Testing", "description": "Mock, test, dev sandbox" }
      ]
    },

    { "id": "control-apis", "title": "APIM Control Plane • Control APIs", "plane": "control", "group": "control-plane",
      "features": [
        { "id": "api-admin", "title": "Admin API", "description": "Platform services, policy mgmt" },
        { "id": "api-publisher", "title": "Publisher API", "description": "Create, update, publish" },
        { "id": "api-devportal", "title": "DevPortal API", "description": "Apps, subscriptions" },
        { "id": "api-eventhub", "title": "EventHub", "description": "Control events to gateways" },
        { "id": "api-devops", "title": "DevOps API", "description": "CI/CD automation" },
        { "id": "api-service-catalog", "title": "Service Catalog API", "description": "Backend services registry" }
      ]
    },

    { "id": "control-db", "title": "Control Plane DB", "plane": "control", "group": "control-plane" },

    { "id": "dev-tools", "title": "Developer Tools", "plane": "control", "group": "control-plane",
      "features": [
        { "id": "vscode", "title": "VSCode Plugins", "description": "API spec & mediation editors", "personas": ["api-developer"] },
        { "id": "apk-conf", "title": "API sequence config", "description": "Generate/store policy sequences" }
      ]
    },

    { "id": "cicd", "title": "CI/CD & Artifact Repos", "plane": "control", "group": "control-plane",
      "features": [
        { "id": "pipeline", "title": "Pipelines", "description": "Build, sign, promote gateway configs" }
      ]
    },

    { "id": "ingress-gw", "title": "Ingress API Gateway", "plane": "data", "group": "data-plane",
      "features": [
        { "id": "gw-security", "title": "AuthN/AuthZ", "description": "JWT/OAuth, mTLS, scopes", "personas": ["api-consumer","api-product-manager"] },
        { "id": "gw-policies", "title": "Policies", "description": "Rate limit, transform, mediation" }
      ]
    },

    { "id": "egress-ai-gw", "title": "Egress / AI Gateway", "plane": "data", "group": "data-plane",
      "features": [
        { "id": "gw-egress", "title": "Outbound Calls", "description": "To external/AI services with headers/PII controls" }
      ]
    },

    { "id": "analytics", "title": "API Analytics & Monetization", "plane": "support", "group": "observability",
      "features": [
        { "id": "obs-logs", "title": "Logs/Metrics/Traces", "description": "ELK, Prometheus, Grafana, Jaeger, Zipkin" },
        { "id": "monetize", "title": "Monetization", "description": "Plans, usage, billing (Moesif, etc.)", "personas": ["api-product-manager"] },
        { "id": "bijira", "title": "Bijira MCP", "description": "AI/assist for governance" }
      ]
    },

    { "id": "external-clients", "title": "External Clients", "plane": "data", "group": "clients",
      "features": [
        { "id": "ext-apps", "title": "Partners, Chatbots, Mobile, Web", "description": "Client API calls" }
      ]
    },

    { "id": "internal-clients", "title": "Internal Clients", "plane": "data", "group": "clients",
      "features": [
        { "id": "int-apps", "title": "Legacy/Monoliths, Enterprise Apps, Multi-grain services", "description": "Client API calls" }
      ]
    },

    { "id": "external-services", "title": "External Services (AI)", "plane": "data", "group": "backends",
      "features": [
        { "id": "mistral", "title": "Mistral", "description": "LLM/AI inference" },
        { "id": "azure-openai", "title": "Azure OpenAI", "description": "LLM/AI inference" },
        { "id": "openai", "title": "OpenAI", "description": "LLM/AI inference" }
      ]
    },

    { "id": "service-mesh", "title": "Service Mesh", "plane": "data", "group": "backends" },
    { "id": "integration-services", "title": "Integration Services", "plane": "data", "group": "backends" }
  ],
  "edges": [
    { "id": "e1", "source": "roles-consumer", "target": "dev-portal", "label": "Discover & Subscribe", "kind": "control", "personas": ["api-consumer"] },
    { "id": "e2", "source": "dev-portal", "target": "key-mgmt", "label": "App keys / tokens", "kind": "security" },
    { "id": "e3", "source": "publisher-portal", "target": "control-apis", "label": "Publish APIs", "kind": "control", "personas": ["api-developer","api-product-manager"] },
    { "id": "e4", "source": "admin-portal", "target": "control-apis", "label": "Policies & Workflow", "kind": "control", "personas": ["api-product-manager"] },
    { "id": "e5", "source": "control-apis", "target": "ingress-gw", "label": "Configure Gateways", "kind": "control" },
    { "id": "e6", "source": "control-apis", "target": "egress-ai-gw", "label": "Control events", "kind": "control", "dashed": true },
    { "id": "e7", "source": "dev-tools", "target": "cicd", "label": "Commit artifacts", "kind": "ci-cd", "personas": ["api-developer"] },
    { "id": "e8", "source": "cicd", "target": "control-apis", "label": "Automate promote/deploy", "kind": "ci-cd" },

    { "id": "e9", "source": "external-clients", "target": "ingress-gw", "label": "Client API calls", "kind": "data", "personas": ["api-consumer"] },
    { "id": "e10", "source": "internal-clients", "target": "ingress-gw", "label": "Client API calls", "kind": "data" },
    { "id": "e11", "source": "ingress-gw", "target": "service-mesh", "label": "Backend APIs", "kind": "data" },
    { "id": "e12", "source": "egress-ai-gw", "target": "external-services", "label": "AI/External calls", "kind": "data" },
    { "id": "e13", "source": "ingress-gw", "target": "analytics", "label": "API logging & metrics", "kind": "observability" },
    { "id": "e14", "source": "egress-ai-gw", "target": "analytics", "label": "API logging & metrics", "kind": "observability" },
    { "id": "e15", "source": "key-mgmt", "target": "ingress-gw", "label": "Introspect/validate", "kind": "security" },
    { "id": "e16", "source": "key-mgmt", "target": "egress-ai-gw", "label": "Service cred mgmt", "kind": "security", "dashed": true },

    { "id": "e17", "source": "roles-developer", "target": "dev-tools", "label": "Design specs & mediations", "kind": "control", "personas": ["api-developer"] },
    { "id": "e18", "source": "roles-product", "target": "admin-portal", "label": "Set policies/tiers", "kind": "control", "personas": ["api-product-manager"] },
    { "id": "e19", "source": "roles-product", "target": "analytics", "label": "Analyze usage/monetize", "kind": "observability", "personas": ["api-product-manager"] },
    { "id": "e20", "source": "roles-consumer", "target": "external-clients", "label": "Apps/channels", "kind": "data", "personas": ["api-consumer"] }
  ],
  "flows": [
    {
      "id": "flow-publish",
      "title": "Publish an API",
      "persona": "api-developer",
      "steps": [
        { "highlightNodes": ["roles-developer","dev-tools"], "highlightEdges": ["e17"], "narration": "Developer authors API spec & mediation in VSCode." },
        { "highlightNodes": ["cicd","control-apis","publisher-portal","control-db"], "highlightEdges": ["e7","e8","e3"], "narration": "CI/CD pushes artifacts; Publisher publishes via Control APIs." },
        { "highlightNodes": ["ingress-gw","key-mgmt"], "highlightEdges": ["e5","e15"], "narration": "Gateways configured; key manager wired for token validation." }
      ]
    },
    {
      "id": "flow-subscribe",
      "title": "Subscribe & Get Keys",
      "persona": "api-consumer",
      "steps": [
        { "highlightNodes": ["roles-consumer","dev-portal"], "highlightEdges": ["e1"], "narration": "Consumer discovers API & subscribes." },
        { "highlightNodes": ["key-mgmt"], "highlightEdges": ["e2"], "narration": "Keys/tokens issued for the application." }
      ]
    },
    {
      "id": "flow-call",
      "title": "Invoke API",
      "persona": "api-consumer",
      "steps": [
        { "highlightNodes": ["external-clients","ingress-gw","service-mesh"], "highlightEdges": ["e9","e11"], "narration": "Client calls API through ingress to backend." },
        { "highlightNodes": ["analytics"], "highlightEdges": ["e13"], "narration": "Logs/metrics/traces captured for analytics & monetization." }
      ]
    },
    {
      "id": "flow-ai-egress",
      "title": "Outbound to AI Provider",
      "persona": "api-developer",
      "steps": [
        { "highlightNodes": ["ingress-gw","egress-ai-gw","external-services"], "highlightEdges": ["e6","e12"], "narration": "Policy routes to egress gateway; calls external AI with governance." }
      ]
    }
  ]
}

